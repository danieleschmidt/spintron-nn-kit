[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spintron-nn-kit"
version = "0.1.0"
description = "Ultra-low-power neural inference framework for spin-orbit-torque hardware"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SpinTron-NN-Kit Contributors", email = "spintron-nn@example.com"}
]
maintainers = [
    {name = "SpinTron-NN-Kit Contributors", email = "spintron-nn@example.com"}
]
keywords = [
    "spintronics", "neural-networks", "pytorch", "hardware-acceleration",
    "mtj", "sot", "low-power", "edge-ai", "neuromorphic", "verilog"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Hardware",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "tqdm>=4.62.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "wandb>=0.13.0",
    "tensorboard>=2.8.0",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=2.15.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "pre-commit>=3.0.0",
    "commitizen>=3.0.0",
    "pydocstyle>=6.3.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "nbsphinx>=0.8.0",
    "jupyterlab>=3.4.0",
    "ipywidgets>=8.0.0",
]
simulation = [
    "ngspice>=36",
    "pyspice>=1.5.0",
    "cocotb>=1.7.0",
    "cocotb-test>=0.2.0",
    "verilator>=4.200",
]
visualization = [
    "plotly>=5.10.0",
    "seaborn>=0.11.0",
    "bokeh>=2.4.0",
    "graphviz>=0.20.0",
]
benchmarking = [
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    "py-spy>=0.3.0",
    "benchmark-runner>=0.1.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "nbsphinx>=0.8.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]
all = [
    "spintron-nn-kit[dev,simulation,visualization,benchmarking,docs]"
]

[project.urls]
Homepage = "https://github.com/danieleschmidt/spintron-nn-kit"
Documentation = "https://spintron-nn-kit.readthedocs.io"
Repository = "https://github.com/danieleschmidt/spintron-nn-kit.git"
"Bug Tracker" = "https://github.com/danieleschmidt/spintron-nn-kit/issues"
Changelog = "https://github.com/danieleschmidt/spintron-nn-kit/blob/main/CHANGELOG.md"

[project.scripts]
spintron-convert = "spintron_nn.cli:convert"
spintron-train = "spintron_nn.cli:train"
spintron-simulate = "spintron_nn.cli:simulate"
spintron-benchmark = "spintron_nn.cli:benchmark"

[tool.setuptools.packages.find]
where = ["."]
include = ["spintron_nn*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | simulation
  | work
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "simulation",
    "work"
]

[tool.pylint.messages_control]
disable = [
    "C0330",  # Wrong hanging indentation before block (add 4 spaces)
    "C0326",  # No space allowed before comma/semicolon/colon
]

[tool.pylint.format]
max-line-length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*",
    "matplotlib.*",
    "pandas.*",
    "sklearn.*",
    "torch.*",
    "torchvision.*",
    "wandb.*",
    "tensorboard.*",
    "ngspice.*",
    "pyspice.*",
    "cocotb.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "hardware: marks tests that require hardware simulation",
    "gpu: marks tests that require GPU",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["spintron_nn"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
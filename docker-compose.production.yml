
version: '3.8'

services:
  spintron-app:
    build:
      context: .
      dockerfile: Dockerfile.production
    image: spintron-nn:latest
    container_name: spintron-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - WORKERS=4
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs
    networks:
      - spintron-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  nginx:
    image: nginx:alpine
    container_name: spintron-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - spintron-app
    networks:
      - spintron-network

  redis:
    image: redis:alpine
    container_name: spintron-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - spintron-network
    command: redis-server --appendonly yes

  prometheus:
    image: prom/prometheus:latest
    container_name: spintron-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - spintron-network

volumes:
  redis-data:
  prometheus-data:

networks:
  spintron-network:
    driver: bridge

[metadata]
name = spintron-nn-kit
version = attr: spintron_nn.__version__
description = Ultra-low-power neural inference framework for spin-orbit-torque hardware
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/danieleschmidt/spintron-nn-kit
author = SpinTron-NN-Kit Contributors
author_email = spintron-nn@example.com
license = MIT
license_file = LICENSE
platform = any
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: System :: Hardware

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
install_requires =
    torch>=1.12.0
    torchvision>=0.13.0
    numpy>=1.21.0
    scipy>=1.7.0
    matplotlib>=3.5.0
    pandas>=1.3.0
    pyyaml>=6.0
    tqdm>=4.62.0
    click>=8.0.0
    rich>=12.0.0

[options.packages.find]
exclude =
    tests*

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
    pylint>=2.15.0
    mypy>=1.0.0
    bandit>=1.7.0
    pre-commit>=3.0.0

[options.entry_points]
console_scripts =
    spintron-convert = spintron_nn.cli:convert
    spintron-train = spintron_nn.cli:train
    spintron-simulate = spintron_nn.cli:simulate
    spintron-benchmark = spintron_nn.cli:benchmark

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    old,
    build,
    dist,
    simulation,
    work

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --tb=short
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    hardware: marks tests that require hardware simulation
    gpu: marks tests that require GPU